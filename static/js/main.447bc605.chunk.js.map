{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fetch","require","App","useState","images","setImages","text","setText","query","setQuery","useEffect","process","then","response","json","data","results","className","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","map","image","src","urls","regular","alt","alt_description","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAGMA,EAAQC,EAAQ,IAoDPC,MAlDf,WAAiB,IAAD,EACcC,mBAAS,IADvB,mBACPC,EADO,KACCC,EADD,OAEUF,mBAAS,IAFnB,mBAEPG,EAFO,KAEDC,EAFC,OAGYJ,mBAAS,IAHrB,mBAGPK,EAHO,KAGAC,EAHA,KAoBd,OAhBAC,qBAAU,WACRV,EAAM,gDAAD,OAC6CQ,EAD7C,sBACgEG,gDAElEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,cAElB,CAACR,IASF,sBAAKS,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAMC,SATK,SAAAC,GACfA,EAAEC,iBACFX,EAASH,GACTC,EAAQ,KAMJ,UACE,iDACA,uBACEc,KAAK,OACLC,SAAU,SAAAH,GAAC,OAAIZ,EAAQY,EAAEI,OAAOC,QAChCA,MAAOlB,EACPmB,YAAY,iBAEd,wBAAQJ,KAAK,SAAb,yBAGJ,qBAAKJ,UAAU,YAAf,SACGb,EAAOsB,KAAI,SACVC,GADU,OAGV,sBAAoBV,UAAU,OAA9B,UACE,qBAAKW,IAAKD,EAAME,KAAKC,QAASb,UAAU,WAAWc,IAAI,KACvD,qBAAKd,UAAU,eAAf,SACE,qBAAKA,UAAU,aAAf,SAA6BU,EAAMK,sBAH7BL,EAAMM,aC/BXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.447bc605.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\n\nconst fetch = require('node-fetch')\n\nfunction App () {\n  const [images, setImages] = useState([]) // 今なんの写真が表示されてるか、その状態を管理する\n  const [text, setText] = useState('') // 検索バーに入れる文字列の状態を管理\n  const [query, setQuery] = useState('') // 今なんの文字列で検索してるかを保持する\n  useEffect(() => {\n    fetch(\n      `https://api.unsplash.com/search/photos?query=${query}&client_id=${process.env.REACT_APP_CLIENT_ID}` // データ取得、アクセスキーは環境変数にしてる\n    )\n      .then(response => response.json()) // responseオブジェクトが返ってくるからそれをjsonデータにする\n      .then(data => {\n        setImages(data.results) // 取ってきたデータをImagesに入れる\n      })\n  }, [query]) // 第二引数にqueryをセットする、これによりqueryの値が変更された時にuseEffectが走る。\n\n  const onSubmit = e => {\n    e.preventDefault() // 画面遷移を防ぐ\n    setQuery(text) // 引数にinputタグに入れられたのを入れるからtext\n    setText('') // まっさらにまた戻す\n  }\n\n  return (\n    <div className='App'>\n      <div className='main'>\n        <form onSubmit={onSubmit}>\n          <label>Image search</label>\n          <input\n            type='text'\n            onChange={e => setText(e.target.value)} // e.target.valueでinputの値を取得できる\n            value={text}\n            placeholder='Please enter'\n          />\n          <button type='submit'>Search</button>\n        </form>\n      </div>\n      <div className='container'>\n        {images.map((\n          image // 繰り返し処理\n        ) => (\n          <div key={image.id} className='card'>\n            <img src={image.urls.regular} className='card-img' alt='' />\n            <div className='card-content'>\n              <div className='card-title'>{image.alt_description}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}